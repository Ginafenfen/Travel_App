{"ast":null,"code":"var _jsxFileName = \"/Users/ginafen/Downloads/GA_Unit_2/Project_2_TravelAPP/src/component1/WeatherInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import WeatherCard from \"./WeatherCard\";\n\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\nimport WbCloudyIcon from \"@mui/icons-material/WbCloudy\";\nimport LensBlurIcon from \"@mui/icons-material/LensBlur\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherInfo = props => {\n  _s();\n\n  // const [searchValue, setSearchValue] = useState(\"Thailand\");\n  const [tempInfo, setTempInfo] = useState({});\n  const [IsLoading, setIsLoading] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weathertheState, setWeathertheState] = useState(\"\"); // if (props.tempInfo[2])\n  //   switch (props.tempInfo[2]) {\n  //     case \"clouds\":\n  //       setWeathertheState(<WbCloudyIcon />);\n  //       break;\n  //     case \"haze\":\n  //       setWeathertheState(<LensBlurIcon />);\n  //       break;\n  //     case \"clear\":\n  //       setWeathertheState(<WbSunnyIcon />);\n  //       break;\n  //   }\n  // const [temp, setTemp] = useState(\"\");\n  // const [WeatherMood, setWeatherMood] = useState(\"\");\n  // const [setCountryName]=useState()\n  // const getWeatherInfo = async () => {\n  //   const fetchUrl = async (url) => {\n  //     setIsLoading(true);\n  //     setError(null);\n  //     const handleTemp = (event) => {\n  //       props.setTemp(event.target.value);\n  //       console.log(event.target.value);\n  //     };\n  //     const handleWeathermood = (event) => {\n  //       setWeatherMood(event.target.value);\n  //       console.log(event.target.value);\n  //     };\n  //     const handleCountryName = (event) => {\n  //       setCountryName(event.target.value);\n  //       console.log(event.target.value);\n  //     };\n  //     try {\n  //       let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.searchValue}&units=metric&appid=80be835590c51d8786ce59810daef2be`;\n  //       const res = await fetch(url);\n  //       const data = await res.json();\n  //       console.log(data);\n  //       const { temp } = data.main;\n  //       const { main: weathermood } = data.weather[0];\n  //       const { name } = data;\n  //       const myNewWeatherInfo = {\n  //         temp,\n  //         weathermood,\n  //         name,\n  //       };\n  //       setTempInfo(myNewWeatherInfo);\n  //     } catch (error) {\n  //       console.log(error);\n  //       setIsLoading(false);\n  //     }\n  //   };\n  // useEffect(() => {\n  //   fetchUrl();\n  // }, []);\n  // useEffect(() => {\n  //   fetchData();\n  // }, [people]);\n  // if (weathermood)\n  //   switch (weathermood) {\n  //     case \"clouds\":\n  //       setWeathertheState(\"WbCloudyIcon\");\n  //       break;\n  //     case \"haze\":\n  //       setWeathertheState(\"LensBlurIcon\");\n  //       break;\n  //     case \"clear\":\n  //       setWeathertheState(\"WbSunnyIcon\");\n  //       break;\n  //   }\n  // };\n  // getWeatherInfo();\n  // getWeatherInfo({}, [weathermood]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" weather check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          autoFocus: true,\n          id: \"search\",\n          className: \"searchTerm\",\n          placeholder: \"search...\",\n          value: props.searchValue,\n          onChange: props.handleChangforWeather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchButton\",\n          type: \"submit\",\n          onClick: props.getWeatherInfo,\n          children: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temperature\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Weather for \", props.tempInfo[3], \" is \", props.tempInfo[1], \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weatherCondition\",\n          children: weathertheState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherInfo, \"S5O3wUx8o6ccWmPnE1IvA+L2G8c=\");\n\n_c = WeatherInfo;\nexport default WeatherInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherInfo\");","map":{"version":3,"names":["React","useState","WbSunnyIcon","WbCloudyIcon","LensBlurIcon","WeatherInfo","props","tempInfo","setTempInfo","IsLoading","setIsLoading","error","setError","weathertheState","setWeathertheState","searchValue","handleChangforWeather","getWeatherInfo"],"sources":["/Users/ginafen/Downloads/GA_Unit_2/Project_2_TravelAPP/src/component1/WeatherInfo.js"],"sourcesContent":["import React, { useState } from \"react\";\n// import WeatherCard from \"./WeatherCard\";\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\nimport WbCloudyIcon from \"@mui/icons-material/WbCloudy\";\nimport LensBlurIcon from \"@mui/icons-material/LensBlur\";\n\nconst WeatherInfo = (props) => {\n  // const [searchValue, setSearchValue] = useState(\"Thailand\");\n  const [tempInfo, setTempInfo] = useState({});\n  const [IsLoading, setIsLoading] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weathertheState, setWeathertheState] = useState(\"\");\n\n  // if (props.tempInfo[2])\n  //   switch (props.tempInfo[2]) {\n  //     case \"clouds\":\n  //       setWeathertheState(<WbCloudyIcon />);\n  //       break;\n  //     case \"haze\":\n  //       setWeathertheState(<LensBlurIcon />);\n  //       break;\n  //     case \"clear\":\n  //       setWeathertheState(<WbSunnyIcon />);\n  //       break;\n  //   }\n  // const [temp, setTemp] = useState(\"\");\n  // const [WeatherMood, setWeatherMood] = useState(\"\");\n  // const [setCountryName]=useState()\n\n  // const getWeatherInfo = async () => {\n  //   const fetchUrl = async (url) => {\n  //     setIsLoading(true);\n  //     setError(null);\n\n  //     const handleTemp = (event) => {\n  //       props.setTemp(event.target.value);\n  //       console.log(event.target.value);\n  //     };\n\n  //     const handleWeathermood = (event) => {\n  //       setWeatherMood(event.target.value);\n  //       console.log(event.target.value);\n  //     };\n\n  //     const handleCountryName = (event) => {\n  //       setCountryName(event.target.value);\n  //       console.log(event.target.value);\n  //     };\n\n  //     try {\n  //       let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.searchValue}&units=metric&appid=80be835590c51d8786ce59810daef2be`;\n\n  //       const res = await fetch(url);\n  //       const data = await res.json();\n  //       console.log(data);\n  //       const { temp } = data.main;\n  //       const { main: weathermood } = data.weather[0];\n  //       const { name } = data;\n\n  //       const myNewWeatherInfo = {\n  //         temp,\n  //         weathermood,\n  //         name,\n  //       };\n\n  //       setTempInfo(myNewWeatherInfo);\n  //     } catch (error) {\n  //       console.log(error);\n  //       setIsLoading(false);\n  //     }\n  //   };\n\n  // useEffect(() => {\n  //   fetchUrl();\n  // }, []);\n\n  // useEffect(() => {\n  //   fetchData();\n  // }, [people]);\n\n  // if (weathermood)\n  //   switch (weathermood) {\n  //     case \"clouds\":\n  //       setWeathertheState(\"WbCloudyIcon\");\n  //       break;\n  //     case \"haze\":\n  //       setWeathertheState(\"LensBlurIcon\");\n  //       break;\n  //     case \"clear\":\n  //       setWeathertheState(\"WbSunnyIcon\");\n  //       break;\n  //   }\n  // };\n\n  // getWeatherInfo();\n\n  // getWeatherInfo({}, [weathermood]);\n\n  return (\n    <div>\n      <div className=\"wrap\">\n        <div className=\"search\">\n          <h3> weather check</h3>\n          <input\n            type=\"search\"\n            autoFocus\n            id=\"search\"\n            className=\"searchTerm\"\n            placeholder=\"search...\"\n            value={props.searchValue}\n            onChange={props.handleChangforWeather}\n          />\n          {/* onChange={(e) => props.setSearchValue(e.target.value)} */}\n          <button\n            className=\"searchButton\"\n            type=\"submit\"\n            onClick={props.getWeatherInfo}\n          >\n            check\n          </button>\n        </div>\n      </div>\n\n      <div className=\"weatherInfo\">\n        <div className=\"temperature\">\n          <span>\n            Weather for {props.tempInfo[3]} is {props.tempInfo[1]}&deg;\n          </span>\n        </div>\n        <div className=\"description\">\n          <div className=\"weatherCondition\">{weathertheState}</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WeatherInfo;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACY,eAAD,EAAkBC,kBAAlB,IAAwCb,QAAQ,CAAC,EAAD,CAAtD,CAL6B,CAO7B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;;EAEA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,MAAf;MAAA,uBACE;QAAK,SAAS,EAAC,QAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,QADP;UAEE,SAAS,MAFX;UAGE,EAAE,EAAC,QAHL;UAIE,SAAS,EAAC,YAJZ;UAKE,WAAW,EAAC,WALd;UAME,KAAK,EAAEK,KAAK,CAACS,WANf;UAOE,QAAQ,EAAET,KAAK,CAACU;QAPlB;UAAA;UAAA;UAAA;QAAA,QAFF,eAYE;UACE,SAAS,EAAC,cADZ;UAEE,IAAI,EAAC,QAFP;UAGE,OAAO,EAAEV,KAAK,CAACW,cAHjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAZF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAwBE;MAAK,SAAS,EAAC,aAAf;MAAA,wBACE;QAAK,SAAS,EAAC,aAAf;QAAA,uBACE;UAAA,2BACeX,KAAK,CAACC,QAAN,CAAe,CAAf,CADf,UACsCD,KAAK,CAACC,QAAN,CAAe,CAAf,CADtC;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAK,SAAS,EAAC,aAAf;QAAA,uBACE;UAAK,SAAS,EAAC,kBAAf;UAAA,UAAmCM;QAAnC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QAxBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqCD,CAjID;;GAAMR,W;;KAAAA,W;AAmIN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}