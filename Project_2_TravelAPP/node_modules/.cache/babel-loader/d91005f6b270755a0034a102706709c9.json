{"ast":null,"code":"var _jsxFileName = \"/Users/ginafen/Downloads/GA_Unit_2/Project_2_TravelAPP/src/component1/WeatherInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherCard from \"./WeatherCard\";\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\nimport WbCloudyIcon from \"@mui/icons-material/WbCloudy\";\nimport LensBlurIcon from \"@mui/icons-material/LensBlur\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherInfo = props => {\n  _s();\n\n  // const [searchValue, setSearchValue] = useState(\"Thailand\");\n  const [tempInfo, setTempInfo] = useState({});\n  const [IsLoading, setIsLoading] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weathertheState, setWeathertheState] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [WeatherMood, setWeatherMood] = useState(\"\");\n  const [countryName, setCountryName] = useState(\"\");\n\n  const getWeatherInfo = async () => {\n    const fetchUrl = async url => {\n      setIsLoading(true);\n      setError(null);\n\n      const handleTemp = event => {\n        props.setTemp(event.target.value);\n        console.log(event.target.value);\n      };\n\n      const handleWeathermood = event => {\n        setWeatherMood(event.target.value);\n        console.log(event.target.value);\n      };\n\n      const handleCountryName = event => {\n        setCountryName(event.target.value);\n        console.log(event.target.value);\n      };\n\n      try {\n        let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.searchValue}&units=metric&appid=80be835590c51d8786ce59810daef2be`;\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n        const {\n          temp\n        } = data.main;\n        const {\n          main: weathermood\n        } = data.weather[0];\n        const {\n          name\n        } = data;\n        const myNewWeatherInfo = {\n          temp,\n          weathermood,\n          name\n        };\n        setTempInfo(myNewWeatherInfo);\n      } catch (error) {\n        console.log(error);\n        setIsLoading(false);\n      }\n    }; // useEffect(() => {\n    //   fetchUrl();\n    // }, []);\n    // useEffect(() => {\n    //   fetchData();\n    // }, [people]);\n    // if (weathermood)\n    //   switch (weathermood) {\n    //     case \"clouds\":\n    //       setWeathertheState(\"WbCloudyIcon\");\n    //       break;\n    //     case \"haze\":\n    //       setWeathertheState(\"LensBlurIcon\");\n    //       break;\n    //     case \"clear\":\n    //       setWeathertheState(\"WbSunnyIcon\");\n    //       break;\n    //   }\n\n  };\n\n  getWeatherInfo(); // getWeatherInfo({}, [weathermood]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" weather check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          autoFocus: true,\n          id: \"search\",\n          className: \"searchTerm\",\n          placeholder: \"search...\",\n          value: props.name,\n          onChange: e => props.setSearchValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchButton\",\n          type: \"button\",\n          onClick: getWeatherInfo,\n          children: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weatherInfo\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"temperature\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Weather for \", tempInfo[3], \" is \", tempInfo[1], \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weatherCondition\",\n          children: tempInfo[2]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherInfo, \"tkHEwSYSNwopvG7JpH7MAYEeN6s=\");\n\n_c = WeatherInfo;\nexport default WeatherInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherInfo\");","map":{"version":3,"names":["React","useState","useEffect","WeatherCard","WbSunnyIcon","WbCloudyIcon","LensBlurIcon","WeatherInfo","props","tempInfo","setTempInfo","IsLoading","setIsLoading","error","setError","weathertheState","setWeathertheState","temp","setTemp","WeatherMood","setWeatherMood","countryName","setCountryName","getWeatherInfo","fetchUrl","url","handleTemp","event","target","value","console","log","handleWeathermood","handleCountryName","searchValue","res","fetch","data","json","main","weathermood","weather","name","myNewWeatherInfo","e","setSearchValue"],"sources":["/Users/ginafen/Downloads/GA_Unit_2/Project_2_TravelAPP/src/component1/WeatherInfo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport WeatherCard from \"./WeatherCard\";\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\nimport WbCloudyIcon from \"@mui/icons-material/WbCloudy\";\nimport LensBlurIcon from \"@mui/icons-material/LensBlur\";\n\nconst WeatherInfo = (props) => {\n  // const [searchValue, setSearchValue] = useState(\"Thailand\");\n  const [tempInfo, setTempInfo] = useState({});\n  const [IsLoading, setIsLoading] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weathertheState, setWeathertheState] = useState(\"\");\n  const [temp, setTemp] = useState(\"\");\n  const [WeatherMood, setWeatherMood] = useState(\"\");\n  const [countryName, setCountryName] = useState(\"\");\n\n  const getWeatherInfo = async () => {\n    const fetchUrl = async (url) => {\n      setIsLoading(true);\n      setError(null);\n\n      const handleTemp = (event) => {\n        props.setTemp(event.target.value);\n        console.log(event.target.value);\n      };\n\n      const handleWeathermood = (event) => {\n        setWeatherMood(event.target.value);\n        console.log(event.target.value);\n      };\n\n      const handleCountryName = (event) => {\n        setCountryName(event.target.value);\n        console.log(event.target.value);\n      };\n\n      try {\n        let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.searchValue}&units=metric&appid=80be835590c51d8786ce59810daef2be`;\n\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n        const { temp } = data.main;\n        const { main: weathermood } = data.weather[0];\n        const { name } = data;\n\n        const myNewWeatherInfo = {\n          temp,\n          weathermood,\n          name,\n        };\n\n        setTempInfo(myNewWeatherInfo);\n      } catch (error) {\n        console.log(error);\n        setIsLoading(false);\n      }\n    };\n\n    // useEffect(() => {\n    //   fetchUrl();\n    // }, []);\n\n    // useEffect(() => {\n    //   fetchData();\n    // }, [people]);\n\n    // if (weathermood)\n    //   switch (weathermood) {\n    //     case \"clouds\":\n    //       setWeathertheState(\"WbCloudyIcon\");\n    //       break;\n    //     case \"haze\":\n    //       setWeathertheState(\"LensBlurIcon\");\n    //       break;\n    //     case \"clear\":\n    //       setWeathertheState(\"WbSunnyIcon\");\n    //       break;\n    //   }\n  };\n\n  getWeatherInfo();\n\n  // getWeatherInfo({}, [weathermood]);\n\n  return (\n    <div>\n      <div className=\"wrap\">\n        <div className=\"search\">\n          <h3> weather check</h3>\n          <input\n            type=\"search\"\n            autoFocus\n            id=\"search\"\n            className=\"searchTerm\"\n            placeholder=\"search...\"\n            value={props.name}\n            onChange={(e) => props.setSearchValue(e.target.value)}\n          />\n          <button\n            className=\"searchButton\"\n            type=\"button\"\n            onClick={getWeatherInfo}\n          >\n            check\n          </button>\n        </div>\n      </div>\n\n      <div className=\"weatherInfo\">\n        <div className=\"temperature\">\n          <span>\n            Weather for {tempInfo[3]} is {tempInfo[1]}&deg;\n          </span>\n        </div>\n        <div className=\"description\">\n          <div className=\"weatherCondition\">{tempInfo[2]}</div>\n        </div>\n      </div>\n      {/* <WeatherCard tempInfo={tempInfo} /> */}\n    </div>\n  );\n};\n\nexport default WeatherInfo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}