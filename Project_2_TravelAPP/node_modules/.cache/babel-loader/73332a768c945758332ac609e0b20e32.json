{"ast":null,"code":"var _jsxFileName = \"/Users/ginafen/Downloads/GA_Unit_2/Project_2_TravelAPP/src/component1/PageThree.js\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PageThree = props => {\n  // const [tempInfo, setTempInfo] = useState({});\n  // const getWeatherInfo = async () => {\n  //   try {\n  //     let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.name}&units=metric&appid=86a33b3bc07850d9a2d013d789d09795`;\n  //     const res = await fetch(url);\n  //     const data = await res.json();\n  //     console.log(data);\n  //     const { temp } = data.main;\n  //     const { main: weathermood } = data.weather[0];\n  //     const { name } = data;\n  //     const myNewWeatherInfo = {\n  //       temp,\n  //       weathermood,\n  //       name,\n  //     };\n  //     setTempInfo(myNewWeatherInfo);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  // useEffect(() => {});\n  // if (weathermood)\n  //   switch(weathermood){\n  //     case\"clouds\":\n  //       setWeatherState(\"wi-day-cloudy\")\n  //       break;\n  //     case\"haze\":\n  //      setWeathertheState(\"wi-fog\");\n  //      break;\n  //      case\"clear\"\n  // setWeathertheState(\"wi-day-sunny\")\n  // break;\n  //   }\n  // }\n  //   getWeatherInfo();\n  // }, [weathermood]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" Weather here...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          autoFocus: true,\n          id: \"search\",\n          className: \"searchTerm\",\n          placeholder: \"search...\",\n          value: props.name,\n          onChange: props.handleChangforWeather\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), props.tempInfo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_c = PageThree;\nexport default PageThree;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageThree\");","map":{"version":3,"names":["React","useState","PageThree","props","name","handleChangforWeather","tempInfo"],"sources":["/Users/ginafen/Downloads/GA_Unit_2/Project_2_TravelAPP/src/component1/PageThree.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst PageThree = (props) => {\n  // const [tempInfo, setTempInfo] = useState({});\n\n  // const getWeatherInfo = async () => {\n  //   try {\n  //     let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.name}&units=metric&appid=86a33b3bc07850d9a2d013d789d09795`;\n\n  //     const res = await fetch(url);\n  //     const data = await res.json();\n  //     console.log(data);\n  //     const { temp } = data.main;\n  //     const { main: weathermood } = data.weather[0];\n  //     const { name } = data;\n\n  //     const myNewWeatherInfo = {\n  //       temp,\n  //       weathermood,\n  //       name,\n  //     };\n\n  //     setTempInfo(myNewWeatherInfo);\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n\n  // useEffect(() => {});\n  // if (weathermood)\n  //   switch(weathermood){\n  //     case\"clouds\":\n  //       setWeatherState(\"wi-day-cloudy\")\n  //       break;\n  //     case\"haze\":\n  //      setWeathertheState(\"wi-fog\");\n  //      break;\n  //      case\"clear\"\n  // setWeathertheState(\"wi-day-sunny\")\n  // break;\n  //   }\n  // }\n  //   getWeatherInfo();\n  // }, [weathermood]);\n\n  return (\n    <div>\n      <div className=\"wrap\">\n        <div className=\"search\">\n          <h3> Weather here...</h3>\n          <input\n            type=\"search\"\n            autoFocus\n            id=\"search\"\n            className=\"searchTerm\"\n            placeholder=\"search...\"\n            value={props.name}\n            onChange={props.handleChangforWeather}\n          />\n          {/* <button\n            className=\"searchButton\"\n            type=\"submit\"\n            onClick={props.getWeatherInfo}\n          >\n            check\n          </button> */}\n          {/* Weather for {props.tempInfo} is {props.tempInfo}&deg;\n          <div className=\"weatherCondition\">{props.tempInfo}</div> */}\n          {props.tempInfo}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageThree;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;EAC3B;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,MAAf;MAAA,uBACE;QAAK,SAAS,EAAC,QAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,QADP;UAEE,SAAS,MAFX;UAGE,EAAE,EAAC,QAHL;UAIE,SAAS,EAAC,YAJZ;UAKE,WAAW,EAAC,WALd;UAME,KAAK,EAAEA,KAAK,CAACC,IANf;UAOE,QAAQ,EAAED,KAAK,CAACE;QAPlB;UAAA;UAAA;UAAA;QAAA,QAFF,EAoBGF,KAAK,CAACG,QApBT;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD,CAvED;;KAAMJ,S;AAyEN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}