{"ast":null,"code":"var _jsxFileName = \"/Users/ginafen/Downloads/GA_Unit_2/Project_2_TravelAPP/src/component1/WeatherInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport WeatherCard from \"./WeatherCard\";\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\nimport WbCloudyIcon from \"@mui/icons-material/WbCloudy\";\nimport LensBlurIcon from \"@mui/icons-material/LensBlur\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WeatherInfo = props => {\n  _s();\n\n  // const [searchValue, setSearchValue] = useState(\"Thailand\");\n  const [tempInfo, setTempInfo] = useState({});\n  const [IsLoading, setIsLoading] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weathertheState, setWeathertheState] = useState(\"\");\n\n  const getWeatherInfo = async () => {\n    const fetchUrl = async url => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.searchValue}&units=metric&appid=80be835590c51d8786ce59810daef2be`;\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n        const {\n          temp\n        } = data.main;\n        const {\n          main: weathermood\n        } = data.weather[0];\n        const {\n          name\n        } = data;\n        const myNewWeatherInfo = {\n          temp,\n          weathermood,\n          name\n        };\n        setTempInfo(myNewWeatherInfo);\n      } catch (error) {\n        console.log(error);\n        setIsLoading(false);\n      }\n    }; // useEffect(() => {\n    //   fetchUrl();\n    // }, []);\n    // useEffect(() => {\n    //   fetchData();\n    // }, [people]);\n    // if (weathermood)\n    //   switch (weathermood) {\n    //     case \"clouds\":\n    //       setWeathertheState(\"WbCloudyIcon\");\n    //       break;\n    //     case \"haze\":\n    //       setWeathertheState(\"LensBlurIcon\");\n    //       break;\n    //     case \"clear\":\n    //       setWeathertheState(\"WbSunnyIcon\");\n    //       break;\n    //   }\n\n  };\n\n  getWeatherInfo({}, []); // getWeatherInfo({}, [weathermood]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \" weather check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          autoFocus: true,\n          id: \"search\",\n          className: \"searchTerm\",\n          placeholder: \"search...\",\n          value: props.searchValue,\n          onChange: e => props.setSearchValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"searchButton\",\n          type: \"button\",\n          onClick: getWeatherInfo,\n          children: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      tempInfo: tempInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WeatherInfo, \"S5O3wUx8o6ccWmPnE1IvA+L2G8c=\");\n\n_c = WeatherInfo;\nexport default WeatherInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherInfo\");","map":{"version":3,"names":["React","useState","useEffect","WeatherCard","WbSunnyIcon","WbCloudyIcon","LensBlurIcon","WeatherInfo","props","tempInfo","setTempInfo","IsLoading","setIsLoading","error","setError","weathertheState","setWeathertheState","getWeatherInfo","fetchUrl","url","searchValue","res","fetch","data","json","console","log","temp","main","weathermood","weather","name","myNewWeatherInfo","e","setSearchValue","target","value"],"sources":["/Users/ginafen/Downloads/GA_Unit_2/Project_2_TravelAPP/src/component1/WeatherInfo.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport WeatherCard from \"./WeatherCard\";\nimport WbSunnyIcon from \"@mui/icons-material/WbSunny\";\nimport WbCloudyIcon from \"@mui/icons-material/WbCloudy\";\nimport LensBlurIcon from \"@mui/icons-material/LensBlur\";\n\nconst WeatherInfo = (props) => {\n  // const [searchValue, setSearchValue] = useState(\"Thailand\");\n  const [tempInfo, setTempInfo] = useState({});\n  const [IsLoading, setIsLoading] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [weathertheState, setWeathertheState] = useState(\"\");\n\n  const getWeatherInfo = async () => {\n    const fetchUrl = async (url) => {\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        let url = `https://api.openweathermap.org/data/2.5/weather?q=${props.searchValue}&units=metric&appid=80be835590c51d8786ce59810daef2be`;\n\n        const res = await fetch(url);\n        const data = await res.json();\n        console.log(data);\n        const { temp } = data.main;\n        const { main: weathermood } = data.weather[0];\n        const { name } = data;\n\n        const myNewWeatherInfo = {\n          temp,\n          weathermood,\n          name,\n        };\n\n        setTempInfo(myNewWeatherInfo);\n      } catch (error) {\n        console.log(error);\n        setIsLoading(false);\n      }\n    };\n\n    // useEffect(() => {\n    //   fetchUrl();\n    // }, []);\n\n    // useEffect(() => {\n    //   fetchData();\n    // }, [people]);\n\n    // if (weathermood)\n    //   switch (weathermood) {\n    //     case \"clouds\":\n    //       setWeathertheState(\"WbCloudyIcon\");\n    //       break;\n    //     case \"haze\":\n    //       setWeathertheState(\"LensBlurIcon\");\n    //       break;\n    //     case \"clear\":\n    //       setWeathertheState(\"WbSunnyIcon\");\n    //       break;\n    //   }\n  };\n\n  getWeatherInfo({}, []);\n\n  // getWeatherInfo({}, [weathermood]);\n\n  return (\n    <div>\n      <div className=\"wrap\">\n        <div className=\"search\">\n          <h3> weather check</h3>\n          <input\n            type=\"search\"\n            autoFocus\n            id=\"search\"\n            className=\"searchTerm\"\n            placeholder=\"search...\"\n            value={props.searchValue}\n            onChange={(e) => props.setSearchValue(e.target.value)}\n          />\n          <button\n            className=\"searchButton\"\n            type=\"button\"\n            onClick={getWeatherInfo}\n          >\n            check\n          </button>\n        </div>\n      </div>\n      <WeatherCard tempInfo={tempInfo} />\n    </div>\n  );\n};\n\nexport default WeatherInfo;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B;EACA,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACc,eAAD,EAAkBC,kBAAlB,IAAwCf,QAAQ,CAAC,EAAD,CAAtD;;EAEA,MAAMgB,cAAc,GAAG,YAAY;IACjC,MAAMC,QAAQ,GAAG,MAAOC,GAAP,IAAe;MAC9BP,YAAY,CAAC,IAAD,CAAZ;MACAE,QAAQ,CAAC,IAAD,CAAR;;MAEA,IAAI;QACF,IAAIK,GAAG,GAAI,qDAAoDX,KAAK,CAACY,WAAY,sDAAjF;QAEA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACH,GAAD,CAAvB;QACA,MAAMI,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;QACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;QACA,MAAM;UAAEI;QAAF,IAAWJ,IAAI,CAACK,IAAtB;QACA,MAAM;UAAEA,IAAI,EAAEC;QAAR,IAAwBN,IAAI,CAACO,OAAL,CAAa,CAAb,CAA9B;QACA,MAAM;UAAEC;QAAF,IAAWR,IAAjB;QAEA,MAAMS,gBAAgB,GAAG;UACvBL,IADuB;UAEvBE,WAFuB;UAGvBE;QAHuB,CAAzB;QAMArB,WAAW,CAACsB,gBAAD,CAAX;MACD,CAjBD,CAiBE,OAAOnB,KAAP,EAAc;QACdY,OAAO,CAACC,GAAR,CAAYb,KAAZ;QACAD,YAAY,CAAC,KAAD,CAAZ;MACD;IACF,CAzBD,CADiC,CA4BjC;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EACD,CAhDD;;EAkDAK,cAAc,CAAC,EAAD,EAAK,EAAL,CAAd,CAzD6B,CA2D7B;;EAEA,oBACE;IAAA,wBACE;MAAK,SAAS,EAAC,MAAf;MAAA,uBACE;QAAK,SAAS,EAAC,QAAf;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UACE,IAAI,EAAC,QADP;UAEE,SAAS,MAFX;UAGE,EAAE,EAAC,QAHL;UAIE,SAAS,EAAC,YAJZ;UAKE,WAAW,EAAC,WALd;UAME,KAAK,EAAET,KAAK,CAACY,WANf;UAOE,QAAQ,EAAGa,CAAD,IAAOzB,KAAK,CAAC0B,cAAN,CAAqBD,CAAC,CAACE,MAAF,CAASC,KAA9B;QAPnB;UAAA;UAAA;UAAA;QAAA,QAFF,eAWE;UACE,SAAS,EAAC,cADZ;UAEE,IAAI,EAAC,QAFP;UAGE,OAAO,EAAEnB,cAHX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAXF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAsBE,QAAC,WAAD;MAAa,QAAQ,EAAER;IAAvB;MAAA;MAAA;MAAA;IAAA,QAtBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA0BD,CAvFD;;GAAMF,W;;KAAAA,W;AAyFN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}