{"ast":null,"code":"var _jsxFileName = \"/Users/ginafen/Downloads/GA_Unit_2/Project_2_TravelAPP/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Search = () => {\n  _s();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [input, setInput] = useState(\"\");\n  const [gifUrl, setGifUrl] = useState(\"\");\n  const [showRandom, setShowRandom] = useState(true);\n  const [printWord, setPrintWord] = useState(\"Hello State\");\n\n  const fetchGif = async url => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch(url);\n\n      if (res.status !== 200) {\n        throw new Error(\"Something went wrong.\");\n      }\n\n      const data = await res.json();\n      console.log(data);\n      setGifUrl(data.data[0].images.downsized.url);\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleInputChange = event => {\n    setInput(event.target.value);\n  }; // Does not work, can define const url by itself.\n  //   const getGifWithInput = () => {\n  //     const url =\n  //       \"https://api.giphy.com/v1/gifs/search?api_key=G2aSfGklbIhABGgUtipWmH5eVI6GyMCC&q=\" +\n  //       input;\n  //   };\n\n\n  const handleSubmit = event => {\n    event.preventDefault(); // setShowRandom(false); here 1\n\n    const url = \"https://api.giphy.com/v1/gifs/search?api_key=G2aSfGklbIhABGgUtipWmH5eVI6GyMCC&q=\" + input;\n    fetchGif(url);\n    setInput(\"\");\n  }; ////////////////////////////////////////////////////////\n\n\n  let content = \"\";\n\n  if (gifUrl) {\n    content = /*#__PURE__*/_jsxDEV(\"img\", {\n      src: gifUrl,\n      alt: \"Searched Gif\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The searched gif is loading .. please wait\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }, this);\n  } // const handleClickBackToRandomGif = () => {\n  //   setShowRandom(true);\n  // };\n\n\n  const handleBtnforNewGif = () => {\n    setPrintWord(\"ChangeToGina\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"input\",\n        children: \"Where do u want to go next \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input\",\n        value: input,\n        type: \"text\",\n        onChange: handleInputChange,\n        placeholder: \"Search For a Gif\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-sm-4\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBtnforNewGif,\n      children: \"Click Me to change name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}; // {showRandom ? <Random /> : content}\n\n\n_s(Search, \"AkUP9oHVM8IL1NhUhR5tw6lR4G4=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","Search","isLoading","setIsLoading","error","setError","input","setInput","gifUrl","setGifUrl","showRandom","setShowRandom","printWord","setPrintWord","fetchGif","url","res","fetch","status","Error","data","json","console","log","images","downsized","err","message","handleInputChange","event","target","value","handleSubmit","preventDefault","content","handleBtnforNewGif"],"sources":["/Users/ginafen/Downloads/GA_Unit_2/Project_2_TravelAPP/src/components/Search.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst Search = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [input, setInput] = useState(\"\");\n  const [gifUrl, setGifUrl] = useState(\"\");\n  const [showRandom, setShowRandom] = useState(true);\n  const [printWord, setPrintWord] = useState(\"Hello State\");\n\n  const fetchGif = async (url) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const res = await fetch(url);\n      if (res.status !== 200) {\n        throw new Error(\"Something went wrong.\");\n      }\n\n      const data = await res.json();\n      console.log(data);\n      setGifUrl(data.data[0].images.downsized.url);\n    } catch (err) {\n      setError(err.message);\n    }\n\n    setIsLoading(false);\n  };\n\n  const handleInputChange = (event) => {\n    setInput(event.target.value);\n  };\n\n  // Does not work, can define const url by itself.\n  //   const getGifWithInput = () => {\n  //     const url =\n  //       \"https://api.giphy.com/v1/gifs/search?api_key=G2aSfGklbIhABGgUtipWmH5eVI6GyMCC&q=\" +\n  //       input;\n  //   };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    // setShowRandom(false); here 1\n    const url =\n      \"https://api.giphy.com/v1/gifs/search?api_key=G2aSfGklbIhABGgUtipWmH5eVI6GyMCC&q=\" +\n      input;\n\n    fetchGif(url);\n    setInput(\"\");\n  };\n\n  ////////////////////////////////////////////////////////\n  let content = \"\";\n  if (gifUrl) {\n    content = <img src={gifUrl} alt=\"Searched Gif\"></img>;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>The searched gif is loading .. please wait</p>;\n  }\n\n  // const handleClickBackToRandomGif = () => {\n  //   setShowRandom(true);\n  // };\n\n  const handleBtnforNewGif = () => {\n    setPrintWord(\"ChangeToGina\");\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"input\">Where do u want to go next </label>\n\n        <input\n          id=\"input\"\n          value={input}\n          type=\"text\"\n          onChange={handleInputChange}\n          placeholder=\"Search For a Gif\"\n        />\n\n        <button type=\"submit\">search</button>\n      </form>\n\n      <div className=\"col-sm-4\">{content}</div>\n\n      {/* <button onClick={handleClickBackToRandomGif}> */}\n      {/* if put setState in onClick, need to put in a function, or it will keep looping */}\n\n      <button onClick={handleBtnforNewGif}>Click Me to change name</button>\n    </>\n  );\n};\n// {showRandom ? <Random /> : content}\nexport default Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}